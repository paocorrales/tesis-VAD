vad_20160114$date_time <- round_date(vad_20160114$date_time, "minute")
vad_20160114 <- rbind(subset(superficie, day(date_time) == 14), vad_20160114)
dia <- vad_20160114
ggplot(dia, aes(date_time, ht)) +
geom_contour(aes(z = spd_smooth, color = ..level..), binwidth = 1) +
# geom_contour(data = vad_20160114, aes(z = spd)) +
scale_color_distiller(name = "Velocidad", type = "seq", palette = 8, direction = 1) +
geom_point(data = subset(dia, rmse1 > 0.5), aes(size = rmse1), shape = 1, color = "black") +
geom_point(data = subset(dia, rmse2 > 0.5), aes(size = rmse2), shape = 4, color = "grey25") +
ylim(c(0,2)) + xlab("Tiempo") +
ylab("Altura (km)") +
labs(title = paste0("Campo de viento para el ", as.Date(dia$date_time[1]))) +
theme_minimal()
perfiles <- subset(dia, ht < 1.5 & minute(date_time) == 00 & hour(date_time) %in% c(0, 6, 12, 18, 23))
tiempos <- subset(dia, minute(date_time) == 0)
ggplot(subset(tiempos, !is.na(spd)), aes(date_time, ht)) +
#geom_arrow(data =  tiempos1, aes(mag = spd, angle = di), color = "red") +
geom_arrow(aes(mag = spd, angle = di, color = spd)) +
geom_point(aes(size = ifelse(rmse1 > 0.5, rmse1, NA)), shape = 1, color = "black") +
geom_point(aes(size = ifelse(rmse2 > 0.5, rmse2, NA)), shape = 4, color = "grey25") +
scale_size_continuous(range = c(0, 5), guide = "none") +
scale_color_distiller(palette = "Oranges", name="Velocidad", direction = 1) +
xlab("Tiempo (hora UTC)") + ylab("Altura (km)") +
ylim(c(0,2)) +
scale_x_datetime(date_breaks = "2 hour", date_labels = "%H z") +
theme(axis.text.x = element_text(angle = 45)) +
labs(title = paste0("Dirección del viento para el ", as.Date(dia$date_time[1]))) +
theme_minimal()
ggplot(subset(tiempos, ht %in% c(0.01, 0.3, 1.0)), aes(u, v,  color = as.factor(ht))) +
geom_point(aes(x = ifelse(hour(date_time) != 0, u, NA)), size = 1) +
geom_point(aes(x = ifelse(hour(date_time) == 0, u, NA)), shape = 17, size = 3) +
geom_path() +
scale_color_brewer(palette = "Set1", name="Nivel", type = "qual") +
xlab("u (m/s)") + ylab("v (m/s)") +
labs(title = paste0("Hodógrafa para el ", as.Date(dia$date_time[1]), "para distintos niveles")) +
#xlim(c(-12,10)) +
#ylim(c(-14,10)) +
coord_equal() +
theme_minimal()
View(vad_20160114)
ggplot(perfiles, aes(u, v,  color = as.factor(hour(date_time)))) +
geom_point(data=subset(perfiles, ht != 0.1), size = 1) +
geom_point(data=subset(perfiles, ht == 0.1), shape = 17, size = 3) +
geom_path() +
scale_color_brewer(palette = "Set1", name="Hora", type = "qual") +
xlab("u (m/s)") + ylab("v (m/s)") +
labs(title = paste0("Hodógrafa para el ", as.Date(dia$date_time[1]), "en distintos tiempos")) +
#xlim(c(-10,14)) +
#ylim(c(-10,14)) +
coord_equal() +
theme_minimal()
perfiles <- subset(dia, ht < 1.5 & minute(date_time) == 00 & hour(date_time) %in% c(0, 3, 6, 9, 12))
ggplot(perfiles, aes(u, v,  color = as.factor(hour(date_time)))) +
geom_point(data=subset(perfiles, ht != 0.1), size = 1) +
geom_point(data=subset(perfiles, ht == 0.1), shape = 17, size = 3) +
geom_path() +
scale_color_brewer(palette = "Set1", name="Hora", type = "qual") +
xlab("u (m/s)") + ylab("v (m/s)") +
labs(title = paste0("Hodógrafa para el ", as.Date(dia$date_time[1]), "en distintos tiempos")) +
#xlim(c(-10,14)) +
#ylim(c(-10,14)) +
coord_equal() +
theme_minimal()
dia <- vad_20160113
ggplot(dia, aes(date_time, ht)) +
geom_contour(aes(z = spd_smooth, color = ..level..), binwidth = 1) +
# geom_contour(data = vad_20160114, aes(z = spd)) +
scale_color_distiller(name = "Velocidad", type = "seq", palette = 8, direction = 1) +
geom_point(data = subset(dia, rmse1 > 0.5), aes(size = rmse1), shape = 1, color = "black") +
geom_point(data = subset(dia, rmse2 > 0.5), aes(size = rmse2), shape = 4, color = "grey25") +
ylim(c(0,2)) + xlab("Tiempo") +
ylab("Altura (km)") +
labs(title = paste0("Campo de viento para el ", as.Date(dia$date_time[1]))) +
theme_minimal()
library(ggplot2)
library(reshape2)
library(lubridate)
library(RadioSonde)
library(gridBase)
library(grid)
library(magrittr)
library(data.table)
library(zoo)
library(dplyr)
library(mutate)
source("geom_arrow.R")
source("helpfun.R")
ggplot(dia, aes(date_time, ht)) +
geom_contour(aes(z = spd_smooth, color = ..level..), binwidth = 1) +
# geom_contour(data = vad_20160114, aes(z = spd)) +
scale_color_distiller(name = "Velocidad", type = "seq", palette = 8, direction = 1) +
geom_point(data = subset(dia, rmse1 > 0.5), aes(size = rmse1), shape = 1, color = "black") +
geom_point(data = subset(dia, rmse2 > 0.5), aes(size = rmse2), shape = 4, color = "grey25") +
ylim(c(0,2)) + xlab("Tiempo") +
ylab("Altura (km)") +
labs(title = paste0("Campo de viento para el ", as.Date(dia$date_time[1]))) +
theme_minimal()
vad_20160113 <- read.vad("../../20160113_240/vda*") %>% lowess.vad()
dia <- vad_20160113
ggplot(dia, aes(date_time, ht)) +
geom_contour(aes(z = spd_smooth, color = ..level..), binwidth = 1) +
# geom_contour(data = vad_20160114, aes(z = spd)) +
scale_color_distiller(name = "Velocidad", type = "seq", palette = 8, direction = 1) +
geom_point(data = subset(dia, rmse1 > 0.5), aes(size = rmse1), shape = 1, color = "black") +
geom_point(data = subset(dia, rmse2 > 0.5), aes(size = rmse2), shape = 4, color = "grey25") +
ylim(c(0,2)) + xlab("Tiempo") +
ylab("Altura (km)") +
labs(title = paste0("Campo de viento para el ", as.Date(dia$date_time[1]))) +
theme_minimal()
perfiles <- subset(dia, ht < 1.5 & minute(date_time) == 00 & hour(date_time) %in% c(21,22,23,24))
ggplot(perfiles, aes(ht, spd, color = as.factor(hour(date_time)))) +
geom_line() +
coord_flip() +
scale_color_brewer(palette = "Set1", name="Tiempo", type = "qual") +
ylab("Viento (m/s)") +
xlab("Altura (Km)") +
labs(title = paste0("Perfiles de viento para el ", as.Date(dia$date_time[1]))) +
theme_minimal()
perfiles <- subset(dia, ht < 1.5 & minute(date_time) == 00 & hour(date_time) %in% c(19,20,21,22,23,24))
ggplot(perfiles, aes(ht, spd, color = as.factor(hour(date_time)))) +
geom_line() +
coord_flip() +
scale_color_brewer(palette = "Set1", name="Tiempo", type = "qual") +
ylab("Viento (m/s)") +
xlab("Altura (Km)") +
labs(title = paste0("Perfiles de viento para el ", as.Date(dia$date_time[1]))) +
theme_minimal()
perfiles <- subset(dia, ht < 1.5 & minute(date_time) == 00 & hour(date_time) %in% c(17,18,19,20,21,22,23,24))
ggplot(perfiles, aes(ht, spd, color = as.factor(hour(date_time)))) +
geom_line() +
coord_flip() +
scale_color_brewer(palette = "Set1", name="Tiempo", type = "qual") +
ylab("Viento (m/s)") +
xlab("Altura (Km)") +
labs(title = paste0("Perfiles de viento para el ", as.Date(dia$date_time[1]))) +
theme_minimal()
perfiles <- subset(dia, ht < 1.0 & minute(date_time) == 00 & hour(date_time) %in% c(17,18,19,20,21,22,23,24))
ggplot(perfiles, aes(ht, spd, color = as.factor(hour(date_time)))) +
geom_line() +
coord_flip() +
scale_color_brewer(palette = "Set1", name="Tiempo", type = "qual") +
ylab("Viento (m/s)") +
xlab("Altura (Km)") +
labs(title = paste0("Perfiles de viento para el ", as.Date(dia$date_time[1]))) +
theme_minimal()
u0 <- subset(vad_20160113, hour(date_time) == 21)$spd_smooth
u0
subset(vad_20160113, hour(date_time) == 21)
u0 <- subset(vad_20160113, hour(date_time) == 21:00)$spd_smooth
u0 <- subset(vad_20160113, hour(date_time) == 21 & minute(date_time) == 0)$spd_smooth
u0
read.vad <- function(path){
filename <- (Sys.glob(path))
datetime <- ymd_hms(stringi::stri_sub(filename, from = 24, to = 44))
for (i in 1:length(filename)){
temp <- read.csv(filename[i], sep = ";", dec = ".", na.strings = "-9999")
date_time <- datetime[i]
temp$date_time <- date_time
if (i == 1){
temp2 <- temp
} else {
temp2 <- rbind(temp2, temp)
}
}
temp <- lowess.vad(temp)
temp2$di <- temp2$di
temp2$u <- -temp2$spd * sin(temp2$di*pi/180)
temp2$v <- -temp2$spd * cos(temp2$di*pi/180)
return(temp2)
}
vad_20160113 <- read.vad("../../20160113_240/vda*") #%>% lowess.vad()
View(vad_20160113)
read.vad <- function(path){
filename <- (Sys.glob(path))
datetime <- ymd_hms(stringi::stri_sub(filename, from = 24, to = 44))
for (i in 1:length(filename)){
temp <- read.csv(filename[i], sep = ";", dec = ".", na.strings = "-9999")
date_time <- datetime[i]
temp$date_time <- date_time
if (i == 1){
temp2 <- temp
} else {
temp2 <- rbind(temp2, temp)
}
}
temp2 <- lowess.vad(temp2)
temp2$di <- temp2$di
temp2$u <- -temp2$spd * sin(temp2$di*pi/180)
temp2$v <- -temp2$spd * cos(temp2$di*pi/180)
return(temp2)
}
vad_20160113 <- read.vad("../../20160113_240/vda*") #%>% lowess.vad()
read.vad <- function(path){
filename <- (Sys.glob(path))
datetime <- ymd_hms(stringi::stri_sub(filename, from = 24, to = 44))
for (i in 1:length(filename)){
temp <- read.csv(filename[i], sep = ";", dec = ".", na.strings = "-9999")
date_time <- datetime[i]
temp$date_time <- date_time
if (i == 1){
temp2 <- temp
} else {
temp2 <- rbind(temp2, temp)
}
}
temp2 <- lowess.vad(temp2)
temp2$di <- temp2$di
temp2$u <- -temp2$spd_smooth * sin(temp2$di*pi/180)
temp2$v <- -temp2$spd_smooth * cos(temp2$di*pi/180)
return(temp2)
}
vad_20160113 <- read.vad("../../20160113_240/vda*") #%>% lowess.vad()
u0 <- subset(vad_20160113, hour(date_time) == 21 & minute(date_time) == 0)$u
u0
ht <- subset(vad_20160113, hour(date_time) == 21 & minute(date_time) == 0)$ht
#Incorporando datos de superficie
sup <- read.csv("../../Superficie/parana2016.csv", sep = ";", na.strings = " ")
# Ahora hay que trabajar sobre el archivo para que las variable de interés estén en las unidades
# que corresponden y tengan el nivel correspondiente
sup$intensidad <- sup$intensidad * 0.5144 # Paso de nudos a m/s
sup$direccion <- sup$direccion * 10 #Paso del formato synop a angulos entre 0 y 360
sup$ht <- 0.01
# Ahora la fecha y hora, miedo.
sup$fecha <- dmy_hm(paste0(sup$fecha, " - ", sup$hora.utc, ":00"))
keep <- c("fecha", "ht", "direccion", "intensidad")
sup <- sup[keep]
sup$u <- sup$intensidad * cos(sup$direccion*pi/180)
sup$v <- sup$intensidad * sin(sup$direccion*pi/180)
cnames <- c("X", "ht", "spd", "rmse1", "rmse2", "rmse3", "di", "rings", "date_time", "u", "v")
superficie <- data.frame(X = NA,
ht = sup$ht,
spd = sup$intensidad,
rmse1 = NA,
rmse2 = NA,
rmse3 = NA,
di = sup$direccion,
rings = NA,
date_time = sup$fecha,
u = sup$u,
v = sup$v,
spd_smooth = sup$intensidad)
vad_20160114$date_time <- round_date(vad_20160114$date_time, "minute")
vad_20160114 <- rbind(subset(superficie, day(date_time) == 14), vad_20160114)
vad_20160113$date_time <- round_date(vad_20160113$date_time, "minute")
vad_20160113 <- rbind(subset(superficie, day(date_time) == 13), vad_20160113)
View(vad_20160113)
vad_20160114 <- read.vad("../../20160114_240/vda*") #%>% lowess.vad()
vad_20160113 <- read.vad("../../20160113_240/vda*") #%>% lowess.vad()
#Incorporando datos de superficie
sup <- read.csv("../../Superficie/parana2016.csv", sep = ";", na.strings = " ")
# Ahora hay que trabajar sobre el archivo para que las variable de interés estén en las unidades
# que corresponden y tengan el nivel correspondiente
sup$intensidad <- sup$intensidad * 0.5144 # Paso de nudos a m/s
sup$direccion <- sup$direccion * 10 #Paso del formato synop a angulos entre 0 y 360
sup$ht <- 0.01
# Ahora la fecha y hora, miedo.
sup$fecha <- dmy_hm(paste0(sup$fecha, " - ", sup$hora.utc, ":00"))
keep <- c("fecha", "ht", "direccion", "intensidad")
sup <- sup[keep]
sup$u <- sup$intensidad * cos(sup$direccion*pi/180)
sup$v <- sup$intensidad * sin(sup$direccion*pi/180)
cnames <- c("X", "ht", "spd", "rmse1", "rmse2", "rmse3", "di", "rings", "date_time", "u", "v")
superficie <- data.frame(X = NA,
ht = sup$ht,
spd = sup$intensidad,
rmse1 = NA,
rmse2 = NA,
rmse3 = NA,
di = sup$direccion,
rings = NA,
date_time = sup$fecha,
u = sup$u,
v = sup$v,
spd_smooth = sup$intensidad)
vad_20160114$date_time <- round_date(vad_20160114$date_time, "minute")
vad_20160114 <- rbind(subset(superficie, day(date_time) == 14), vad_20160114)
vad_20160113$date_time <- round_date(vad_20160113$date_time, "minute")
vad_20160113 <- rbind(subset(superficie, day(date_time) == 13), vad_20160113)
u0 <- subset(vad_20160113, hour(date_time) == 21 & minute(date_time) == 0)$u
v0 <- subset(vad_20160113, hour(date_time) == 21 & minute(date_time) == 0)$v
# Perfil de equilibrio, usando la aproximación de Ekman y viento geostrífico
# sacado de la galera.
ht <- subset(vad_20160113, hour(date_time) == 21 & minute(date_time) == 0)$ht
ug <- -7 + 6*ht/2000
vg <- 5 - 5*ht/2000
gama <- 1/80 # Según el paper REVISAR
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
ht
f <- 4*pi*sin(-32*pi/180)/(24*3600)
f
t <- hour(vad_20160113$date_time)
t
t <- unique(hour(vad_20160113$date_time))
t
t <- seconds(vad_20160113$date_time - ymd_hm("2016-01-13 21:00:00"))
t <- seconds(vad_20160113$date_time - ymd_hm("2016-01-13 21:00"))
t
head(t)
t <- seconds(vad_20160114$date_time - ymd_hm("2016-01-13 21:00"))
head(t)
t <- seconds(vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00"))
head(t)
t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
head(t)
vad_20160114$date_time
head(v)
head(vad_20160114$date_time)
View(vad_20160114)
dia <- vad_20160114
ggplot(dia, aes(date_time, ht)) +
geom_contour(aes(z = spd_smooth, color = ..level..), binwidth = 1) +
# geom_contour(data = vad_20160114, aes(z = spd)) +
scale_color_distiller(name = "Velocidad", type = "seq", palette = 8, direction = 1) +
geom_point(data = subset(dia, rmse1 > 0.5), aes(size = rmse1), shape = 1, color = "black") +
geom_point(data = subset(dia, rmse2 > 0.5), aes(size = rmse2), shape = 4, color = "grey25") +
ylim(c(0,2)) + xlab("Tiempo") +
ylab("Altura (km)") +
labs(title = paste0("Campo de viento para el ", as.Date(dia$date_time[1]))) +
theme_minimal()
gama <- 1/80 # Según el paper REVISAR
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
# Perfil modelizado
f <- 4*pi*sin(-32*pi/180)/(24*3600)
#t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
# 21 UTC / 3UTC / 6 UTC
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (vo - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
gama <- 1/80 # Según el paper REVISAR
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
# Perfil modelizado
f <- 4*pi*sin(-32*pi/180)/(24*3600)
#t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
# 21 UTC / 3UTC / 6 UTC
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
plot(spd_io, ht)
plot(spd_io, ht, type = "l")
with(subset(vad_20160114, date_time == date_time[1048]), points(spd_smooth, ht))
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht))
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io, ht)
points(spd_io+7, ht)
k <- 0.5
gama <- 1 / sqrt(2*k/f)
gama <- 1 / sqrt(2*k/abs(f))
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
gama
1/80
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io+7, ht)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io, ht)
k <- 0.5
gama <- 1 / sqrt(2*k/abs(f))
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
# Perfil modelizado
#t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
# 21 UTC / 3UTC / 6 UTC
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io, ht)
gama <- 1/80 # Según el paper REVISAR
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
# Perfil modelizado
#t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
# 21 UTC / 3UTC / 6 UTC
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
points(spd_io, ht)
plot(ug)
ug <- 10  #+ 6*ht/2000
vg <- 6  #- 5*ht/2000
gama <- 1/80 # Según el paper REVISAR
k <- 0.5
gama <- 1 / sqrt(2*k/abs(f))
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io, ht)
ug <- 20  #+ 6*ht/2000
vg <- 6  #- 5*ht/2000
gama <- 1/80 # Según el paper REVISAR
k <- 0.5
gama <- 1 / sqrt(2*k/abs(f))
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
# Perfil modelizado
#t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
# 21 UTC / 3UTC / 6 UTC
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io, ht)
ug <- 200  #+ 6*ht/2000
vg <- 6  #- 5*ht/2000
gama <- 1/80 # Según el paper REVISAR
k <- 0.5
gama <- 1 / sqrt(2*k/abs(f))
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
# Perfil modelizado
#t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
# 21 UTC / 3UTC / 6 UTC
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io, ht)
ug <- 200  #+ 6*ht/2000
vg <- 60  #- 5*ht/2000
gama <- 1/80 # Según el paper REVISAR
k <- 0.5
gama <- 1 / sqrt(2*k/abs(f))
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
# Perfil modelizado
#t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
# 21 UTC / 3UTC / 6 UTC
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io, ht)
plot(ht, ue)
plot(ht, ve)
ht
f <- 4*pi*sin(-32*pi/180)/(24*3600)
ht <- subset(vad_20160113, hour(date_time) == 21 & minute(date_time) == 0)$ht*1000
ug <- 200  #+ 6*ht/2000
vg <- 60  #- 5*ht/2000
gama <- 1/80 # Según el paper REVISAR
k <- 0.5
gama <- 1 / sqrt(2*k/abs(f))
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
# Perfil modelizado
#t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
# 21 UTC / 3UTC / 6 UTC
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io, ht)
f <- 4*pi*sin(-32*pi/180)/(24*3600)
ht <- subset(vad_20160113, hour(date_time) == 21 & minute(date_time) == 0)$ht*1000
ug <- -7  #+ 6*ht/2000
vg <- 5  #- 5*ht/2000
gama <- 1/80 # Según el paper REVISAR
k <- 0.5
gama <- 1 / sqrt(2*k/abs(f))
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
# Perfil modelizado
#t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
# 21 UTC / 3UTC / 6 UTC
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io, ht)
plot(spd_io, ht)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht, type = "l"))
points(spd_io, ht)
plot(spd_io, ht)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht*1000, type = "l"))
points(spd_io, ht)
f <- 4*pi*sin(-32*pi/180)/(24*3600)
ht <- subset(vad_20160113, hour(date_time) == 21 & minute(date_time) == 0)$ht*1000
ug <- -7  + 6*ht/2000
vg <- 5  - 5*ht/2000
gama <- 1/80 # Según el paper REVISAR
k <- 0.5
gama <- 1 / sqrt(2*k/abs(f))
ue <- ug - ug*exp(-gama*ht)*cos(gama*ht) - vg*exp(-gama*ht)*sin(gama*ht)
ve <- vg - vg*exp(-gama*ht)*cos(gama*ht) + ug*exp(-gama*ht)*sin(gama*ht)
# Perfil modelizado
#t <- vad_20160114$date_time - ymd_hms("2016-01-13 21:00:00")
# 21 UTC / 3UTC / 6 UTC
t <- 9*3600
u <- ue + (v0 - ve)*sin(f*t) + (u0 - ue)*cos(f*t)
v <- ve + (v0 - ve)*cos(f*t) - (u0 - ue)*sin(f*t)
spd_io <- sqrt(u^2 + v^2)
with(subset(vad_20160114, date_time == date_time[1048]), plot(spd_smooth, ht*1000, type = "l"))
points(spd_io, ht)
