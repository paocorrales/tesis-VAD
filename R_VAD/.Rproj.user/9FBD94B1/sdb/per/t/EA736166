{
    "collab_server" : "",
    "contents" : "library(ggplot2)\nlibrary(reshape2)\nlibrary(lubridate)\nlibrary(RadioSonde)\nlibrary(gridBase)\nlibrary(grid)\n\n#20160114_240\nfilename <- (Sys.glob(\"../20160114_240/vda*\"))\ndatetime <- ymd_hms(stringi::stri_sub(filename, from = 21, to = 41))\n\nfor (i in 1:length(filename)){\n  temp <- read.csv(filename[i], sep = \";\", dec = \".\", na.strings = \"-9999\")\n  date_time <- datetime[i]\n  temp$date_time <- date_time\n  if (i == 1){\n    vad_14_240 <- temp\n  } else {\n    vad_14_240 <- rbind(vad_14_240, temp)\n  }\n}\n\n#20160114_120\nfilename <- (Sys.glob(\"../20160114_120/vda*\"))\ndatetime <- ymd_hms(stringi::stri_sub(filename, from = 21, to = 41))\n\nfor (i in 1:length(filename)){\n  temp <- read.csv(filename[i], sep = \";\", dec = \".\", na.strings = \"-9999\")\n  date_time <- datetime[i]\n  temp$date_time <- date_time\n  if (i == 1){\n    vad_14_120 <- temp\n  } else {\n    vad_14_120 <- rbind(vad_14_120, temp)\n  }\n}\n\n#20160123_240\nfilename <- (Sys.glob(\"../20160123_240/vda*\"))\ndatetime <- ymd_hms(stringi::stri_sub(filename, from = 21, to = 41))\n\nfor (i in 1:length(filename)){\n  temp <- read.csv(filename[i], sep = \";\", dec = \".\", na.strings = \"-9999\")\n  date_time <- datetime[i]\n  temp$date_time <- date_time\n  if (i == 1){\n    vad_23_240 <- temp\n  } else {\n    vad_23_240 <- rbind(vad_23_240, temp)\n  }\n}\n\n#20160123_120\nfilename <- (Sys.glob(\"../20160123_120/vda*\"))\ndatetime <- ymd_hms(stringi::stri_sub(filename, from = 21, to = 41))\n\nfor (i in 1:length(filename)){\n  temp <- read.csv(filename[i], sep = \";\", dec = \".\", na.strings = \"-9999\")\n  date_time <- datetime[i]\n  temp$date_time <- date_time\n  if (i == 1){\n    vad_23_120 <- temp\n  } else {\n    vad_23_120 <- rbind(vad_23_120, temp)\n  }\n}\n\n#20160111_240\nfilename <- (Sys.glob(\"../20160111_240/vda*\"))\ndatetime <- ymd_hms(stringi::stri_sub(filename, from = 21, to = 41))\n\nfor (i in 1:length(filename)){\n  temp <- read.csv(filename[i], sep = \";\", dec = \".\", na.strings = \"-9999\")\n  date_time <- datetime[i]\n  temp$date_time <- date_time\n  if (i == 1){\n    vad_11_240 <- temp\n  } else {\n    vad_11_240 <- rbind(vad_11_240, temp)\n  }\n}\n\n#20160111_120\nfilename <- (Sys.glob(\"../20160111_120/vda*\"))\ndatetime <- ymd_hms(stringi::stri_sub(filename, from = 21, to = 41))\n\nfor (i in 1:length(filename)){\n  temp <- read.csv(filename[i], sep = \";\", dec = \".\", na.strings = \"-9999\")\n  date_time <- datetime[i]\n  temp$date_time <- date_time\n  if (i == 1){\n    vad_11_120 <- temp\n  } else {\n    vad_11_120 <- rbind(vad_11_120, temp)\n  }\n}\n\n#20160116_240\nfilename <- (Sys.glob(\"../20160116_240/vda*\"))\ndatetime <- ymd_hms(stringi::stri_sub(filename, from = 21, to = 41))\n\nfor (i in 1:length(filename)){\n  temp <- read.csv(filename[i], sep = \";\", dec = \".\", na.strings = \"-9999\")\n  date_time <- datetime[i]\n  temp$date_time <- date_time\n  if (i == 1){\n    vad_16_240 <- temp\n  } else {\n    vad_16_240 <- rbind(vad_16_240, temp)\n  }\n}\n\n#20160116_120\nfilename <- (Sys.glob(\"../20160116_120/vda*\"))\ndatetime <- ymd_hms(stringi::stri_sub(filename, from = 21, to = 41))\n\nfor (i in 1:length(filename)){\n  temp <- read.csv(filename[i], sep = \";\", dec = \".\", na.strings = \"-9999\")\n  date_time <- datetime[i]\n  temp$date_time <- date_time\n  if (i == 1){\n    vad_16_120 <- temp\n  } else {\n    vad_16_120 <- rbind(vad_16_120, temp)\n  }\n}\n\n#20160114_240 con consistencia temporal\nfilename <- (Sys.glob(\"../Test/temporal/vda*\"))\ndatetime <- ymd_hms(stringi::stri_sub(filename, from = 22, to = 42))\n\nfor (i in 1:length(filename)){\n  temp <- read.csv(filename[i], sep = \";\", dec = \".\", na.strings = \"-9999\")\n  date_time <- datetime[i]\n  temp$date_time <- date_time\n  if (i == 1){\n    vad_14_240 <- temp\n  } else {\n    vad_14_240 <- rbind(vad_14_240, temp)\n  }\n}\n\n\n#Plots\n\n\ndia <- vad_14_240\n# Campo de viento con errores\nggplot(dia, aes(date_time, ht)) + \n  geom_contour(aes(z = spd, color = ..level..), binwidth = 1) +\n  #geom_contour(data = vad_161_240, aes(z = spd)) +\n  scale_color_distiller(name = \"Velocidad\", type = \"seq\", palette = 8, direction = 1) + \n  geom_point(data = subset(dia, rmse > 0.5), aes(size = rmse), shape = 1, color = \"black\") +\n  geom_point(data = subset(dia, rmse2 > 0.5), aes(size = rmse2), shape = 4, color = \"grey25\") +\n  ylim(c(0,2)) + xlab(\"Tiempo\") + ylab(\"Altura (km)\") + theme_minimal()\n\n#Viento por niveles\nggplot(subset(dia, ht < 1.7), aes(date_time, spd)) + geom_line(color = \"#FF3300\") + facet_wrap(~ht) + \n  xlab(\"Tiempo (hora UTC)\") + ylab(\"Viento (m/s)\") + \n  scale_x_datetime(date_breaks = \"6 hour\", date_labels = \"%H\") +\n  theme_minimal() + theme(axis.text.x = element_text(angle = 45))\n\n#Anillos por niveles\nggplot(subset(dia, ht < 1.7), aes(date_time, rings)) + geom_point(color = \"#FF6600\") + facet_wrap(~ht) + \n  xlab(\"Tiempo (hora UTC)\") + ylab(\"Anillos usados\") + \n  scale_x_datetime(date_breaks = \"6 hour\", date_labels = \"%H\") +\n  theme_minimal() + theme(axis.text.x = element_text(angle = 45))\n\n#Error por niveles\ngdata <- melt(vad_23_240, id.vars)\nggplot(subset(vad_23_240, ht < 1.7), aes(date_time, rmse)) + \n  geom_line(aes(color = \"#fdbf6f\")) + \n  scale_color_manual(values = c(\"#fdbf6f\", \"#ff7f00\"),\n                     labels = c(\"rmse1\", \"rmse2\")) +\n  geom_line(aes(date_time, rmse2, color = \"#ff7f00\")) +\n  facet_wrap(~ht) + \n  scale_x_datetime(date_breaks = \"6 hour\", date_labels = \"%H\") +\n  xlab(\"Tiempo (hora UTC)\") +\n  ylab(\"rmse (m/s)\") + \n  theme_minimal() + theme(axis.text.x = element_text(angle = 45))\n\n\n#Perfil de viento para un par de tiempos\nggplot(subset(vad_14_240, ht < 1.5 & date_time == date_time[1125] | date_time == date_time[2550]), aes(ht, spd, color = as.factor(date_time))) + \n  geom_line() + \n  coord_flip() +\n  scale_color_brewer(palette = \"Oranges\", name=\"Tiempo\") + \n  ylab(\"Viento (m/s)\") + xlab(\"Altura (Km)\") + \n  theme_minimal()\n#Perfil rmse para un par de tiempos\nggplot(subset(vad_14_240, ht < 1.5 & date_time == date_time[1125] | date_time == date_time[1200]), aes(ht, rmse, color = as.factor(date_time))) + \n  geom_line() + \n  coord_flip() +\n  scale_color_brewer(palette = \"Oranges\", name=\"Tiempo\") + \n  ylab(\"Viento (m/s)\") + xlab(\"Altura (Km)\") + \n  theme_minimal()\n\n#Viento\n\ntemp <- subset(vad_16_240, minute(date_time) == 0)\n#temp$di <- 270 - temp$di\n\nggplot(temp, aes(date_time, ht)) + \n  # geom_point() +\n  # geom_spoke(aes(angle = di*pi/180, radius = 100*spd, color = spd))\n  geom_arrow(aes(mag = spd, angle = di, color = spd)) +\n  geom_point(data = subset(temp, rmse > 0.5), aes(size = rmse), shape = 1, color = \"black\") +\n  geom_point(data = subset(temp, rmse2 > 0.5), aes(size = rmse2), shape = 4, color = \"grey25\") +\n  scale_size_continuous(range = c(0, 10), guide = \"none\") +\n  scale_color_distiller(palette = \"Oranges\", name=\"Velocidad\", direction = 1) +\n  xlab(\"Tiempo (hora UTC)\") + ylab(\"Altura (km)\") +\n  ylim(c(0,2)) + \n  scale_x_datetime(date_breaks = \"2 hour\", date_labels = \"%H:%m\") +\n  theme_minimal() + theme(axis.text.x = element_text(angle = 45))\n\n\n#Perfil de viento para un tiempo\nperfil <- read.csv(\"../20160114_240/elev_vda-2016-01-14T06:30:04Z_INTA_Parana.csv\", sep = \";\", na.strings = \"-9999\")\nggplot(perfil, aes(ht, spd, color = as.factor(elev))) + \n  geom_line() + \n  coord_flip() +\n  xlim(c(0,1.5)) +\n  scale_color_brewer(palette = \"Oranges\", name=\"Tiempo\") + \n  ylab(\"Viento (m/s)\") + xlab(\"Altura (Km)\") + \n  theme_minimal()\n\n\n\n#ComparaciÃ³n\n\nggplot(subset(vad_23_120, ht < 1.5), aes(date_time, spd)) + geom_line(color = \"#FF3300\") + \n  geom_line(data = subset(vad_23_240, ht < 1.5), color = \"#FF9900\") +\n  facet_wrap(~ht) + \n  xlab(\"Tiempo\") + ylab(\"Viento\") + theme_minimal()\n\n\n\n\n#Viento\nperfil <- vad_14_240\nperfil$di <- 360-perfil$di\nperfil$time <- 1\nwith(perfil, plot(perfil$time, perfil$ht, pch=16))\n\nvps <- baseViewports()\npushViewport(vps$inner, vps$figure, vps$plot)\n# Plot\nfor (i in 1:nrow(perfil)) {\n  pushViewport(viewport(\n    x=unit(perfil$time[i], \"native\"),\n    y=unit(perfil$ht[i], \"native\"), \n    angle=360-perfil$di[i]))\n  wind_barb(perfil$spd[i])\n  popViewport()\n}\n\npopViewport(3)\n\nwind_barb <- function(x, mlength=0.1, wblength=0.025) {\n  \n  # Calculate which / how many barbs\n  # any triangles (50)\n  fif <- floor(x /50)\n  # and then look for longer lines for remaining speed (10)\n  tn <- floor( (x - fif* 50)/10)\n  # and then look for shorter lines for remaining speed (5)\n  fv <- floor( (x - fif* 50 - tn* 10)/5)\n  \n  # Spacing & barb length\n  yadj <- 0.5+mlength\n  dist <- (yadj-0.5) / 10    \n  xadj <- 0.5+wblength\n  xfadj <- 0.5+wblength/2        \n  \n  # Create grobs\n  main_grob <- linesGrob(0.5, c(0.5, yadj ))\n  \n  # 50 windspeed\n  if(fif != 0) {\n    fify <- c(yadj, yadj-dist*seq_len(2* fif) )\n    fifx <- c(0.5, xadj)[rep(1:2, length=length(fify))]\n    fif_grob <- pathGrob(fifx, fify, gp=gpar(fill=\"black\"))\n  } else {\n    fif_grob <- NULL\n    fify <- yadj+dist\n  }\n  \n  # Ten windspeed\n  if(tn != 0) {\n    tny <- lapply(seq_len(tn) , function(x) min(fify) - dist*c(x, x-1))  \n    tn_grob <- do.call(gList, \n                       mapply(function(x,y) \n                         linesGrob(x=x, y=y, gp=gpar(fill=\"black\")),\n                         x=list(c(0.5, xadj)), y=tny, SIMPLIFY=FALSE))\n  } else {\n    tn_grob <- NULL\n    tny <- fify\n  }\n  \n  # Five windspeed\n  if(fv != 0) {\n    fvy <- lapply(seq_len(fv) , function(x) min(unlist(tny)) -dist* c(x, x-0.5))\n    fv_grob <- do.call(gList, \n                       mapply(function(x,y) \n                         linesGrob(x=x, y=y, gp=gpar(fill=\"black\")),\n                         x=list(c(0.5, xfadj)), y=fvy, SIMPLIFY=FALSE))\n  } else {\n    fv_grob <- NULL\n  }    \n  \n  # Draw    \n  #grid.newpage()\n  grid.draw(gList(main_grob, fif_grob, tn_grob, fv_grob))\n}\n",
    "created" : 1499973149782.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1399052607",
    "id" : "EA736166",
    "lastKnownWriteTime" : 1499973127,
    "last_content_update" : 1499973127,
    "path" : "~/Dropbox/Tesis/VAD/diario.R",
    "project_path" : "diario.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}